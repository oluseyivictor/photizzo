#include <fast_sine.h>


unsigned int16 TBL_POINTER_NEW, TBL_POINTER_OLD, SET_FREQ, TBL_POINTER_SHIFT,step,DUTY_CYCLE;
int1 Direction,start;
                  
const unsigned int16 sine[512]={
0, 63, 125, 186, 245, 302, 356, 406, 453, 495, 532, 564, 591, 612, 628, 637, 640, 637, 628, 612, 591, 564, 532, 495, 453, 406, 356, 302, 245, 186, 125, 63,   //65%
0, 64, 127, 190, 250, 308, 363, 414, 462, 505, 543, 576, 603, 625, 640, 650, 653, 650, 640, 625, 603, 576, 543, 505, 462, 414, 363, 308, 250, 190, 127, 64, //66.5%
0, 65, 130, 193, 255, 314, 370, 423, 471, 515, 554, 587, 615, 637, 653, 663, 666, 663, 653, 637, 615, 587, 554, 515, 471, 423, 370, 314, 255, 193, 130, 65, //68%
0, 67, 132, 197, 260, 320, 377, 431, 480, 525, 565, 599, 627, 650, 666, 676, 679, 676, 666, 650, 627, 599, 565, 525, 480, 431, 377, 320, 260, 197, 132, 67, //69.5%
0, 68, 135, 201, 265, 327, 385, 440, 490, 536, 576, 611, 640, 663, 680, 690, 693, 690, 680, 663, 640, 611, 576, 536, 490, 440, 385, 327, 265, 201, 135, 68, //71%
0, 69, 138, 205, 270, 333, 392, 448, 499, 546, 587, 623, 652, 676, 692, 703, 706, 703, 692, 676, 652, 623, 587, 546, 499, 448, 392, 333, 270, 205, 138, 69, //72.5%
0, 70, 140, 208, 275, 338, 399, 455, 508, 555, 597, 633, 663, 687, 704, 715, 718, 715, 704, 687, 663, 633, 597, 555, 508, 455, 399, 338, 275, 208, 140, 70, //74%
0, 71, 141, 209, 276, 340, 401, 457, 510, 557, 599, 636, 666, 690, 707, 718, 721, 718, 707, 690, 666, 636, 599, 557, 510, 457, 401, 340, 276, 209, 141, 71, //75.5%
0, 72, 143, 213, 281, 346, 408, 466, 519, 567, 610, 647, 678, 702, 720, 730, 734, 730, 720, 702, 678, 647, 610, 567, 519, 466, 408, 346, 281, 213, 143, 72, //77%
0, 73, 146, 217, 286, 352, 415, 474, 528, 577, 621, 659, 690, 715, 733, 743, 747, 743, 733, 715, 690, 659, 621, 577, 528, 474, 415, 352, 286, 217, 146, 73, //78.5%
0, 76, 152, 226, 298, 368, 433, 495, 552, 603, 649, 688, 721, 746, 765, 776, 780, 776, 765, 746, 721, 688, 649, 603, 552, 495, 433, 368, 298, 226, 152, 76, //80%
0, 78, 155, 230, 303, 374, 441, 503, 561, 613, 659, 699, 733, 759, 778, 789, 793, 789, 778, 759, 733, 699, 659, 613, 561, 503, 441, 374, 303, 230, 155, 78, //81.5




};
#INT_TIMER2
void timer2_isr()
{
 TBL_POINTER_NEW=TBL_POINTER_OLD +128 ;
 if (TBL_POINTER_NEW < TBL_POINTER_OLD){


           if (Direction == 0){

          
setup_ccp1(CCP_OFF);
setup_ccp2(CCP_PWM);
               
              Direction = 1;

           }

           else{
          
                
             
setup_ccp2(CCP_OFF);
setup_ccp1(CCP_PWM);
                Direction = 0;

           }
 }
 // TBL_POINTER_SHIFT= TBL_POINTER_NEW >> 11;//200     same as divide by 2048 hence 65536/2048 = 32 repeat 5 times
    TBL_POINTER_SHIFT= TBL_POINTER_NEW >> 11;                    //  65536/16
     DUTY_CYCLE= TBL_POINTER_SHIFT;

  set_pwm1_duty(sine[DUTY_CYCLE]); 
  set_pwm2_duty(sine[DUTY_CYCLE]);
     TBL_POINTER_OLD=TBL_POINTER_NEW;
     clear_interrupt(INT_TIMER2);
 }


void main()
{
set_tris_b(0x00);
 setup_timer_2(T2_DIV_BY_1,233,1);
 
setup_ccp1(CCP_OFF);
setup_ccp2(CCP_OFF);

 
enable_interrupts(INT_TIMER2);
enable_interrupts(GLOBAL);

 
   while(TRUE)
   {


      //TODO: User Code
   }

}

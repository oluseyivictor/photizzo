int1 state, write;
float Amps, Voltage;
unsigned int16 value;
int8 chr,counter_read;
int receive_string;

#INT_RDA
void serialInt() 
{
receive_string = getc(); // Read character from UART
//printf( " ASCII = %d " ,incode);


write = 1;
output_high(PIN_C2);
enable_interrupts(INT_RDA);
       
     
}

//}

void main()
{
set_tris_B(0xff);
set_tris_A(0xDF);
set_tris_c(0x00);
state = 1;
write = 0;

setup_adc_ports(AN0_AN1_AN3);
    setup_adc(ADC_CLOCK_INTERNAL);
   set_adc_channel(0);

   //enable_interrupts(INT_RDA);
   //enable_interrupts(GLOBAL);
   OUTPUT_C(0X00);
   POWER = 1;
 BUZZER = 1;
 delay_ms(2000);
 BUZZER = 0;

   while(TRUE)
   {
   /*
    POWER = state;
   
    
    /*
if (write == 1)
{
delay_ms(250);
//printf( receive_string);
write = 0;
}




if (!state)
   {
   
   /*Amps = 0;
       for (int i=0; i<20;i++) //Read value for 20 Times
        {
         delay_ms(50);
value = read_adc(); //Get input byte

        Voltage = value*4.8828; //Calculate the Voltage
        
        
            if (Voltage>=2500) //If the current is positive
              Amps += ((Voltage-2500)/0.66);

        else if (Voltage<=2500) //If the current is negative
              Amps += ((2500-Voltage)/0.66);
        }

    
delay_ms(10); // Clear screen
printf( " Current =  %f   Value=%lu  \n\r", Amps/20,value);
      //TODO: User Code
     
      FAN1 = 1;
      FAN2 = 1;
   }
 else
 {
 FAN1 = 0;
 FAN2 = 0;
 }

if (BUTTON == 1)                      // take to interrupt
   {
   delay_ms(100);
    if (BUTTON == 1)
    {
    state=~state;
     while (BUTTON == 1) ;
    }
   }
   
  
if (BATT_LOW == 1) {

BUZZER = 1;
delay_ms(2000);
state = 1;
}
*/
if (kbhit())
{
output_high(PIN_C2);
}
}
}
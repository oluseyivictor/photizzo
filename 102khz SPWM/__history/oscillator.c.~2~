#include <oscillator.h>




unsigned int16 TBL_POINTER_NEW, TBL_POINTER_OLD, SET_FREQ, TBL_POINTER_SHIFT,step,DUTY_CYCLE;
int1 Direction,start;
                  
const unsigned int16 sine[512]={0, 3, 6, 8, 11, 14, 17, 19, 22, 25, 28, 30, 33, 36, 39, 41, 44, 47, 50, 52, 55, 58, 61, 63, 66, 69, 71, 74,
77, 80, 82, 85, 88, 90, 93, 96, 99, 101, 104, 107, 109, 112, 115, 117, 120, 123, 125, 128, 131, 133, 136, 139, 141, 144, 146, 149, 152, 154, 
157, 159, 162, 165, 167, 170, 172, 175, 177, 180, 182, 185, 187, 190, 192, 195, 197, 200, 202, 205, 207, 210, 212, 215, 217, 219, 222, 224, 
227, 229, 231, 234, 236, 238, 241, 243, 245, 248, 250, 252, 255, 257, 259, 261, 264, 266, 268, 270, 272, 275, 277, 279, 281, 283, 285, 288,
290, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 312, 314, 316, 318, 320, 322, 324, 326, 328, 330, 332, 333, 335, 337, 339, 341, 343,
344, 346, 348, 350, 351, 353, 355, 356, 358, 360, 361, 363, 365, 366, 368, 369, 371, 373, 374, 376, 377, 379, 380, 382, 383, 385, 386, 387, 
389, 390, 392, 393, 394, 396, 397, 398, 399, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421,
422, 423, 424, 425, 426, 426, 427, 428, 429, 430, 431, 431, 432, 433, 434, 434, 435, 436, 437, 437, 438, 438, 439, 440, 440, 441, 441, 442, 442, 443, 443, 444, 444, 445, 445, 446, 446, 446, 447, 447, 447, 448, 448, 448, 448, 449, 449, 449, 449, 449, 449, 450, 450, 450, 450, 450, 450, 450, 450, 450, 450, 450, 450, 450, 450, 450, 449, 449, 449, 449, 449, 449, 448, 448, 448, 448, 447, 447, 447, 446, 446, 446, 445, 445, 444, 444, 443, 443, 442, 442, 441, 441, 440, 440, 439, 438, 438, 437, 437, 436, 435, 434, 434, 433, 432, 431, 431, 430, 429, 428, 427, 426, 426, 425, 424, 423, 422, 421, 420, 419, 418, 417, 416, 415, 414, 413, 411, 410, 409, 408, 407, 406, 404, 403, 402, 401, 399, 398, 397, 396, 394, 393, 392, 390, 389, 387, 386, 385, 383, 382, 380, 379, 377, 376, 374, 373, 371, 369, 368, 366, 365, 363, 361, 360, 358, 356, 355, 353, 351, 350, 348, 346, 344, 343, 341, 339, 337, 335, 333, 332, 330, 328, 326, 324, 322, 320, 318, 316, 314, 312, 310, 308, 306, 304, 302, 300, 298, 296, 294, 292, 290, 288, 285, 283, 281, 279, 277, 275, 272, 270, 268, 266, 264, 261, 259, 257, 255, 252, 250, 248, 245, 243, 241, 238, 236, 234, 231, 229, 227, 224, 222, 219, 217, 215, 212, 210, 207, 205, 202, 200, 197, 195, 192, 190, 187, 185, 182, 180, 177, 175, 172, 170, 167, 165, 162, 159, 157, 154, 152, 149, 146, 144, 141, 139, 136, 133, 131, 128, 125, 123, 120, 117, 115, 112, 109, 107, 104, 101,
99, 96, 93, 90, 88, 85, 82, 80, 77, 74, 71, 69, 66, 63, 61, 58, 55, 52, 50, 47, 44, 41, 39, 36, 33, 30, 28, 25, 22, 19, 17, 14, 11, 8, 6, 3};
#INT_TIMER2
void timer2_isr()
{
 TBL_POINTER_NEW=TBL_POINTER_OLD +128 ;
 if (TBL_POINTER_NEW < TBL_POINTER_OLD){


           if (Direction == 0){

          
setup_ccp1(CCP_OFF);
setup_ccp2(CCP_PWM);
               
              Direction = 1;

           }

           else{
          
                
             
setup_ccp2(CCP_OFF);
setup_ccp1(CCP_PWM);
                Direction = 0;

           }
 }
 // TBL_POINTER_SHIFT= TBL_POINTER_NEW >> 11;//200     same as divide by 2048 hence 65536/2048 = 32 repeat 5 times
    TBL_POINTER_SHIFT= TBL_POINTER_NEW >> 7;                    //  65536/16
     DUTY_CYCLE= TBL_POINTER_SHIFT;

  set_pwm1_duty(sine[DUTY_CYCLE]); 
  set_pwm2_duty(sine[DUTY_CYCLE]);
     TBL_POINTER_OLD=TBL_POINTER_NEW;
     clear_interrupt(INT_TIMER2);
 }


void main()
{
set_tris_b(0x00);
 setup_timer_2(T2_DIV_BY_1,116,1);
 
setup_ccp1(CCP_OFF);
setup_ccp2(CCP_OFF);

 
enable_interrupts(INT_TIMER2);
enable_interrupts(GLOBAL);

 
   while(TRUE)
   {


      //TODO: User Code
   }

}

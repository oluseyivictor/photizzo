#include <oscillator.h>




unsigned int16 TBL_POINTER_NEW, TBL_POINTER_OLD, SET_FREQ, TBL_POINTER_SHIFT,step,DUTY_CYCLE;
int1 Direction,start;
                  
const unsigned int16 sine[512]={0, 3, 6, 9, 11, 14, 17, 20, 23, 26, 29, 31, 34, 37, 40, 43, 46, 49, 51, 54, 57, 60, 63, 66, 68, 71, 74, 77, 80, 82, 85, 88, 91, 94, 97, 99, 102, 105, 108, 110, 113, 116, 119, 122, 124, 127, 130, 133, 135, 138, 141, 143, 146, 149, 152, 154, 157, 160, 162, 165, 168, 170, 173, 176, 178, 181, 184, 186, 189, 191, 194, 197, 199, 202, 204, 207, 210, 212, 215, 217, 220, 222, 225, 227, 230, 232, 235, 237, 240, 242, 244, 247, 249, 252, 254, 257, 259, 261, 264, 266, 268, 271, 273, 275, 278, 280, 282, 284, 287, 289, 291, 293, 296, 298, 300, 302, 304, 307, 309, 311, 313, 315, 317, 319, 321, 323, 325, 327, 330, 332, 334, 336, 337, 339, 341, 343, 345, 347, 349, 351, 353, 355, 357, 358, 360, 362, 364, 366, 367, 369, 371, 373, 374, 376, 378, 379, 381, 383, 384, 386, 387, 389, 391, 392, 394, 395, 397, 398, 400, 401, 403, 404, 405, 407, 408, 410, 411, 412, 414, 415, 416, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 442, 443, 444, 445, 446, 447, 448, 448, 449, 450, 451, 451, 452, 453, 453, 454, 455, 455, 456, 456, 457, 458, 458, 459, 459, 460, 460, 461, 461, 461, 462, 462, 462, 463, 463, 463, 464, 464, 464, 465, 465, 465, 465, 465, 465, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 465, 465, 465, 465, 465, 465, 464, 464, 464, 463, 463, 463, 462, 462, 462, 461, 461, 461, 460, 460, 459, 459, 458, 458, 457, 456, 456, 455, 455, 454, 453, 453, 452, 451, 451, 450, 449, 448, 448, 447, 446, 445, 444, 443, 442, 442, 441, 440, 439, 438, 437, 436, 435, 434, 433, 432, 431, 429, 428, 427, 426, 425, 424, 422, 421, 420, 419, 418, 416, 415, 414, 412, 411, 410, 408, 407, 405, 404, 403, 401, 400, 398, 397, 395, 394, 392, 391, 389, 387, 386, 384, 383, 381, 379, 378, 376, 374, 373, 371, 369, 367, 366, 364, 362, 360, 358, 357, 355, 353, 351, 349, 347, 345, 343, 341, 339, 337, 336, 334, 332, 330, 327, 325, 323, 321, 319, 317, 315, 313, 311, 309, 307, 304, 302, 300, 298, 296, 293, 291, 289, 287, 284, 282, 280, 278, 275, 273, 271, 268, 266, 264, 261, 259, 257, 254, 252, 249, 247, 244, 242, 240, 237, 235, 232, 230, 227, 225, 222, 220, 217, 215, 212, 210, 207, 204, 202, 199, 197, 194, 191, 189, 186, 184, 181, 178, 176, 173, 170, 168, 165, 162, 160, 157, 154, 152, 149, 146, 143, 141, 138, 135, 133, 130, 127, 124, 122, 119, 116, 113, 110, 108, 105, 102, 99, 97, 94, 91, 88, 85, 82, 80, 77, 74, 71, 68, 66, 63, 60, 57, 54, 51, 49, 46, 43, 40, 37, 34, 31, 29, 26, 23, 20, 17, 14, 11, 9, 6, 3};


#INT_TIMER2
void timer2_isr()
{
 TBL_POINTER_NEW=TBL_POINTER_OLD +128 ;
 if (TBL_POINTER_NEW < TBL_POINTER_OLD){


           if (Direction == 0){

          
setup_ccp1(CCP_OFF);
setup_ccp2(CCP_PWM);
               
              Direction = 1;

           }

           else{
          
                
             
setup_ccp2(CCP_OFF);
setup_ccp1(CCP_PWM);
                Direction = 0;

           }
 }
 // TBL_POINTER_SHIFT= TBL_POINTER_NEW >> 11;//200     same as divide by 2048 hence 65536/2048 = 32 repeat 5 times
    TBL_POINTER_SHIFT= TBL_POINTER_NEW >> 7;                    //  65536/16
     DUTY_CYCLE= TBL_POINTER_SHIFT;

  set_pwm1_duty(sine[DUTY_CYCLE]); 
  set_pwm2_duty(sine[DUTY_CYCLE]);
     TBL_POINTER_OLD=TBL_POINTER_NEW;
     clear_interrupt(INT_TIMER2);
 }


void main()
{
set_tris_b(0x00);
 setup_timer_2(T2_DIV_BY_1,116,1);
 
setup_ccp1(CCP_OFF);
setup_ccp2(CCP_OFF);

 
enable_interrupts(INT_TIMER2);
enable_interrupts(GLOBAL);

 
   while(TRUE)
   {


      //TODO: User Code
   }

}
